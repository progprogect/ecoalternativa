/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ä–º –¥–ª—è —Å–∞–π—Ç–∞ ecoalternativa.ru
 * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –Ω–∞ –ø–æ—á—Ç—É progprogect@gmail.com
 */

class FormHandler {
  constructor() {
    this.apiEndpoint = '/api/send-email';
    this.fallbackEmail = 'progprogect@gmail.com';
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
   * @param {FormData} formData - –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
   * @param {string} source - –∏—Å—Ç–æ—á–Ω–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏
   * @returns {Promise<{success: boolean, message?: string}>}
   */
  async sendForm(formData, source) {
    const currentTime = new Date().toLocaleString('ru-RU', {
      year: 'numeric',
      month: '2-digit', 
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit'
    });

    // –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const emailData = {
      to: this.fallbackEmail,
      subject: `–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ —Å —Å–∞–π—Ç–∞ - ${source}`,
      timestamp: currentTime,
      source: source,
      formData: {
        name: formData.get('name') || '',
        phone: formData.get('phone') || '',
        email: formData.get('email') || '',
        volume: formData.get('volume') || '',
        comment: formData.get('comment') || formData.get('description') || ''
      }
    };

    // –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    const message = this.formatMessage(emailData);
    emailData.message = message;

    try {
      // –ü—ã—Ç–∞–µ–º—Å—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –Ω–∞—à API
      const response = await this.sendToAPI(emailData);
      if (response.success) {
        console.log('‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ:', emailData);
        return { success: true, message: '–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!' };
      }
    } catch (error) {
      console.warn('‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω:', error.message);
    }

    // Fallback: —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    this.saveToLocalStorage(emailData);
    
    // –õ–æ–≥–∏—Ä—É–µ–º –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    console.log('üìß Email –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ ' + this.fallbackEmail + ':', {
      subject: emailData.subject,
      message: emailData.message,
      timestamp: emailData.timestamp
    });

    return { 
      success: true, 
      message: '–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã! (–≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø–æ—á—Ç—É)' 
    };
  }

  /**
   * –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ API
   */
  async sendToAPI(emailData) {
    const response = await fetch(this.apiEndpoint, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(emailData)
    });

    if (!response.ok) {
      throw new Error(`HTTP ${response.status}`);
    }

    return await response.json();
  }

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è email
   */
  formatMessage(emailData) {
    const { formData, timestamp, source } = emailData;
    
    return `
üåø –ù–û–í–ê–Ø –ó–ê–Ø–í–ö–ê –° –°–ê–ô–¢–ê ECOALTERNATIVA.RU

‚è∞ –í—Ä–µ–º—è: ${timestamp}
üìç –ò—Å—Ç–æ—á–Ω–∏–∫: ${source}

üë§ –ö–û–ù–¢–ê–ö–¢–ù–´–ï –î–ê–ù–ù–´–ï:
‚ñ´Ô∏è –ò–º—è: ${formData.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
‚ñ´Ô∏è –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚ñ´Ô∏è Email: ${formData.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚ñ´Ô∏è –û–±—ä–µ–º (—Ç–æ–Ω–Ω): ${formData.volume || '–ù–µ —É–∫–∞–∑–∞–Ω'}

üí¨ –°–û–û–ë–©–ï–ù–ò–ï:
${formData.comment || '–ë–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è'}

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üè≠ –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ - Shvedoff
üìß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞
    `.trim();
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ localStorage –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
   */
  saveToLocalStorage(emailData) {
    try {
      const leads = JSON.parse(localStorage.getItem('leads') || '[]');
      leads.unshift({
        id: Date.now(),
        ...emailData,
        saved_at: new Date().toISOString()
      });
      
      // –•—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 –∑–∞—è–≤–æ–∫
      localStorage.setItem('leads', JSON.stringify(leads.slice(0, 50)));
      
      console.log('üíæ –ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ localStorage. –í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫:', leads.length);
    } catch (error) {
      console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤ localStorage:', error);
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
   */
  getSavedLeads() {
    try {
      return JSON.parse(localStorage.getItem('leads') || '[]');
    } catch {
      return [];
    }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
   */
  clearSavedLeads() {
    localStorage.removeItem('leads');
    console.log('üóëÔ∏è –í—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ —É–¥–∞–ª–µ–Ω—ã');
  }

  /**
   * –≠–∫—Å–ø–æ—Ä—Ç –∑–∞—è–≤–æ–∫ –≤ CSV
   */
  exportLeadsToCSV() {
    const leads = this.getSavedLeads();
    if (leads.length === 0) {
      console.log('–ù–µ—Ç –∑–∞—è–≤–æ–∫ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞');
      return null;
    }

    const csvHeader = '–í—Ä–µ–º—è,–ò—Å—Ç–æ—á–Ω–∏–∫,–ò–º—è,–¢–µ–ª–µ—Ñ–æ–Ω,Email,–û–±—ä–µ–º,–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π\n';
    const csvData = leads.map(lead => {
      const data = lead.formData;
      return [
        lead.timestamp,
        lead.source,
        data.name,
        data.phone,
        data.email,
        data.volume,
        data.comment.replace(/\n/g, ' ')
      ].map(field => `"${field}"`).join(',');
    }).join('\n');

    const csv = csvHeader + csvData;
    const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
    const link = document.createElement('a');
    link.href = URL.createObjectURL(blob);
    link.download = `leads_${new Date().toISOString().split('T')[0]}.csv`;
    link.click();

    console.log('üìä –≠–∫—Å–ø–æ—Ä—Ç –∑–∞–≤–µ—Ä—à–µ–Ω:', leads.length, '–∑–∞—è–≤–æ–∫');
    return csv;
  }
}

// –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
window.formHandler = new FormHandler();

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
window.showLeads = () => {
  const leads = window.formHandler.getSavedLeads();
  console.table(leads.map(lead => ({
    –í—Ä–µ–º—è: lead.timestamp,
    –ò—Å—Ç–æ—á–Ω–∏–∫: lead.source,
    –ò–º—è: lead.formData.name,
    –¢–µ–ª–µ—Ñ–æ–Ω: lead.formData.phone,
    Email: lead.formData.email
  })));
  return leads;
};

window.exportLeads = () => window.formHandler.exportLeadsToCSV();
window.clearLeads = () => window.formHandler.clearSavedLeads(); 