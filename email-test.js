const nodemailer = require('nodemailer');

// –†–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const emailConfigs = [
  {
    name: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è 1 - –ü–æ—Ä—Ç 587 STARTTLS',
    config: {
      host: 'mailbe07.hoster.by',
      port: 587,
      secure: false,
      auth: {
        user: 'info@ecoalternativa.ru',
        pass: '2{D~9AkEti'
      },
      tls: {
        rejectUnauthorized: false
      }
    }
  },
  {
    name: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è 2 - –ü–æ—Ä—Ç 465 SSL',
    config: {
      host: 'mailbe07.hoster.by',
      port: 465,
      secure: true,
      auth: {
        user: 'info@ecoalternativa.ru',
        pass: '2{D~9AkEti'
      },
      tls: {
        rejectUnauthorized: false
      }
    }
  },
  {
    name: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è 3 - –ü–æ—Ä—Ç 25',
    config: {
      host: 'mailbe07.hoster.by',
      port: 25,
      secure: false,
      auth: {
        user: 'info@ecoalternativa.ru',
        pass: '2{D~9AkEti'
      },
      tls: {
        rejectUnauthorized: false
      }
    }
  },
  {
    name: '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è 4 - –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Ö–æ—Å—Ç',
    config: {
      host: 'smtp.mailbe07.hoster.by',
      port: 587,
      secure: false,
      auth: {
        user: 'info@ecoalternativa.ru',
        pass: '2{D~9AkEti'
      },
      tls: {
        rejectUnauthorized: false
      }
    }
  }
];

async function testEmailConfig(config, name) {
  console.log(`\nüß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º: ${name}`);
  console.log(`   –•–æ—Å—Ç: ${config.host}:${config.port} (secure: ${config.secure})`);
  
  try {
    const transporter = nodemailer.createTransport(config);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
    await transporter.verify();
    console.log(`‚úÖ ${name} - –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!`);
    
    // –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ
    const result = await transporter.sendMail({
      from: '"–≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞" <info@ecoalternativa.ru>',
      to: 'progprogect@gmail.com',
      subject: 'üß™ –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email - ' + name,
      text: `–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email.\n\n–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: ${name}\n–í—Ä–µ–º—è: ${new Date().toLocaleString('ru-RU')}`,
      html: `
        <h2>üß™ –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email</h2>
        <p><strong>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:</strong> ${name}</p>
        <p><strong>–í—Ä–µ–º—è:</strong> ${new Date().toLocaleString('ru-RU')}</p>
        <p>–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –∑–Ω–∞—á–∏—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!</p>
        <hr>
        <p><small>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Å–∞–π—Ç–∞ ecoalternativa.ru</small></p>
      `
    });
    
    console.log(`üéâ ${name} - Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!`);
    console.log(`   Message ID: ${result.messageId}`);
    return { success: true, config, name, messageId: result.messageId };
    
  } catch (error) {
    console.log(`‚ùå ${name} - –û—à–∏–±–∫–∞:`, error.message);
    return { success: false, config, name, error: error.message };
  }
}

async function runEmailTests() {
  console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ email...\n');
  
  const results = [];
  
  for (const { config, name } of emailConfigs) {
    const result = await testEmailConfig(config, name);
    results.push(result);
    
    if (result.success) {
      console.log('üéØ –ù–∞–π–¥–µ–Ω–∞ —Ä–∞–±–æ—á–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è! –ü—Ä–µ–∫—Ä–∞—â–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ.');
      break;
    }
    
    // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 2000));
  }
  
  console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  results.forEach(result => {
    const status = result.success ? '‚úÖ' : '‚ùå';
    console.log(`${status} ${result.name}: ${result.success ? '–†–∞–±–æ—Ç–∞–µ—Ç' : result.error}`);
  });
  
  const workingConfig = results.find(r => r.success);
  if (workingConfig) {
    console.log('\nüéâ –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:');
    console.log(JSON.stringify(workingConfig.config, null, 2));
  } else {
    console.log('\nüòû –ù–∏ –æ–¥–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('   ‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ');
    console.log('   ‚Ä¢ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ —Ñ–∞–π–µ—Ä–≤–æ–ª–∞');
    console.log('   ‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é');
    console.log('   ‚Ä¢ –°–µ—Ä–≤–µ—Ä —Ç—Ä–µ–±—É–µ—Ç –æ—Å–æ–±—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
runEmailTests().catch(console.error); 